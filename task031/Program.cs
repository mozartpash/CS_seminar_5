// Задача 31: Задайте массив из 12 элементов, заполненный случайными числами из промежутка [-9, 9]. Найдите сумму
// отрицательных и положительных элементов массива. Например, в массиве [3,9,-8,1,0,-7,2,-1,8,-3,-1,6] сумма
// положительных чисел равна 29, сумма отрицательных равна  -20.
// Сделан усложнённый вариант задачи (с участием пользователя)

Console.Clear();

int sizeArray = GetNum("Введите длинну массива: ");
int min = GetNum("Введите минимальное значение массива: ");
int max = GetNum("Введите максимальное значение массива: ");

int[] array = GetArray(sizeArray, min, max);
PrintArray(array);
int[] resSum = GetSum(array);
Console.WriteLine($"\nСумма положительных чисел = {resSum[0]} , Сумма отрицательных чисел = {resSum[1]}");// \n - перенос строки, \t - отступ (tab)
//  ..........      ^ Сама программа    .......
//  ..........        Методы ниже       .......
int GetNum(string message)
{
    Console.Write(message);
    int num = int.Parse(Console.ReadLine()!);
    return num;//возвращаем то, что мы хотим увидеть в результате
}

int[] GetArray(int size, int minValue, int maxValue)// Содаём массив и будем контролировать его рамер, мин. диапозон и макс. диапазон
{
    int[] result = new int[size];//создаём массив и в нём будет храниться число элиментов, какое мы решим через аргумент size
    for (int i = 0; i < size; i++)//пробежимся по последовательности массива
    {
        result[i] = new Random().Next(minValue, maxValue + 1);//заполняем массив рандомными данными, диапазон котролируем сами. +1 т.к. он отмимет 1
        //Console.Write($"{result[i]} "); //не нужно так как создали метод PrintArray
    }
    return result;
}

void PrintArray(int[] arr)//метод печати любого массива, который придёт
{
    for (int i = 0; i < arr.Length; i++)
    {
        Console.Write($"{arr[i]} ");
    }
    // Console.WriteLine();
}

int[] GetSum(int[] arr)//Нашу сумму будем класть в массив
{
    int[] res = new int[2];//будет результарующий массив, где будут лежать наши итоговые значения, длинна массива 2
    foreach (int el in arr)//Новый цикл foreach: Элементы будут перезаписываться в el по очереди от 0 расположения до конца всего массива
    {
        if (el > 0) res[0] += el;// Складываем наши положительные елементы = res[0] = res[0] + el
        if (el < 0) res[1] += el;// Складываем наши отрицательные элементы//Можно через else было сделать
    }    
    return res;
}
